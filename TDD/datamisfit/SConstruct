#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct (Madagascar script)
# 
# Purpose: Calculate data misfit for pre calculated traveltime curve.
# 
# Site: https://dirack.github.io
# 
# Version 1.0
# 
# Programer: Rodolfo A C Neves (Dirack) 20/01/2021
# 
# Email: rodolfo_profissional@hotmail.com
# 
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

from rsf.proj import *

def arr2str(array,sep=' '):
	'''
	Convert a tuple array into a string with a given separator
	Example: (1,2,3) is converted to '1,2,3' for sep=','
	:param array: tuple, array to convert
	:param sep: string, separator
	'''
	return sep.join(map(str,array))

def buildVectorFile(filename,array):
	'''
	Build a 1D vector file using sfspike
	:param filename: string, RSF filename
	:param array: tuple, array 1D vector
	'''
	l=len(array)
	s=arr2str(array,',')

	Flow(filename,None,
	'''
	spike mag=%s nsp=%d n1=%d k1=%s
	'''%(s,l,l,arr2str(range(1,l+1,1),',')))

# time coordinates
t=(0.472, 0.385, 0.346, 0.334, 0.346, 0.385, 0.472)

# x coordinates
x=(4.499, 4.711, 4.866, 5, 5.134, 5.289, 5.501)

# Constant velocity model for test
Flow('model',None,
     '''
     spike n1=301 d1=0.01 o1=0 n2=1001 d2=0.01 o2=0 mag=1.4 |
     put label1=Depth unit1=km label2=Position unit2=km
     ''' )

# plot the model
Plot('model','model','grey color=j scalebar=y label1=Depth unit1=km label2=Position unit2=km barlabel=Velocity barunit=km/s barreverse=y title="Constant Velocity Model" allpos=y')

# Generate traveltime curve
buildVectorFile('t',t)
buildVectorFile('x',x)

Flow('s1',None,
        '''
        math n1=2 d1=1 o1=1 n2=1 o2=1 d2=1 output="x1+4"
        ''')

Flow('s2',None,'spike n1=2 d1=1 o1=1 n2=1 o2=1 d2=1 mag=0.5')

Flow('shotsfile',['s2','s1'],'rcat ${SOURCES[1]} axis=2 | transp')

Flow('anglefile',None,'spike n1=2 mag=0')

Flow('t0s',None,'spike n1=2 mag=1')

Flow(['tCoordinates','xCoordinates'],
	['model','shotsfile','anglefile','t0s','t','x'],
	'''
	niptimecurve2 shotsfile=${SOURCES[1]} anglefile=${SOURCES[2]} t0s=${SOURCES[3]} x=${TARGETS[1]}	tdata=${SOURCES[4]} xdata=${SOURCES[5]}
	''')

End()
