#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct (Python)
# 
# Purpose: Program sfniptimecurve test in a constant velocity model.
# 
# Site: https://dirack.github.io
# 
# Version 1.0
# 
# Programer: Rodolfo A C Neves (Dirack) 02/12/2020
# 
# Email: rodolfo_profissional@hotmail.com
# 
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

from rsf.proj import *

# create a model
amp=1
rad=1

# Constant velocity model for test
Flow('model',None,
     '''
     spike n1=301 d1=0.01 o1=0 n2=1001 d2=0.01 o2=0 mag=1.5 |
     put label1=Depth unit1=km label2=Position unit2=km
     ''' )

# plot the model
Plot('model','model','grey color=j scalebar=y label1=Depth unit1=km label2=Position unit2=km barlabel=Velocity barunit=km/s barreverse=y title="Constant Velocity Model" allpos=y')

Flow('s1',None,
        '''
        math n1=2 d1=1 o1=1 n2=1 o2=1 d2=1 output="x1+4"
        ''')

Flow('s2',None,'spike n1=2 d1=1 o1=1 n2=1 o2=1 d2=1 mag=0.5')

Flow('shotsfile',['s2','s1'],'rcat ${SOURCES[1]} axis=2 | transp')

Flow('anglefile',None,'spike n1=2 mag=0')

Flow('t0s',None,'spike n1=2 mag=1')

# do a ray-tracing from NIP sources
Flow(['tCoordinates','xCoordinates'],
	['model','shotsfile','anglefile','t0s'],
        '''
        niptimecurve shotsfile=${SOURCES[1]} anglefile=${SOURCES[2]} t0s=${SOURCES[3]} x=${TARGETS[1]}
        ''')

End()
