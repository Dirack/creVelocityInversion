#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct (Python)
# 
# Purpose: Test sfnipmodsetup in a constan velocity model
# with picked (t0,m0) pairs.
# 
# Site: https://dirack.github.io
# 
# Version 1.0
# 
# Programer: Rodolfo A C Neves (Dirack) 07/02/2021
# 
# Email: rodolfo_profissional@hotmail.com
# 
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

from rsf.proj import *

ns = int(ARGUMENTS.get('ns',1))
ni = int(ARGUMENTS.get('ni',1))
model = 'model_0'

# Constant velocity model for test
Flow(model,None,
     '''
     spike n1=301 d1=0.02 o1=0 n2=1001 d2=0.01 o2=0 mag=1.508 |
     put label1=Depth unit1=km label2=Position unit2=km
     ''' )

# plot the model
Plot(model,model,'grey color=j scalebar=y label1=Depth unit1=km label2=Position unit2=km barlabel=Velocity barunit=km/s barreverse=y title="Constant Velocity Model" allpos=y')

# Generate shotsfile and anglefile for NIP sources
Flow('s2',None,'spike n1=%d d1=1 o1=0 n2=1 o2=1 d2=0 mag=0'%(ns))

Flow('shotsfile',['s2','m0s'],'rcat ${SOURCES[1]} axis=2 | transp')

Flow('anglefile',['beta','t0s','m0s'],
	'''
	getparameter t0s=${SOURCES[1]} m0s=${SOURCES[2]} beta=y
	''')

# Points of the cubic spline velocity function
Flow('sz',None,
	'''
	spike n1=7 d1=1 o1=0 |
		math output="x1*1.0"
	''')

sv='vspline_0'
Flow(sv,'sz',
	'''
	math output="input*0.03+1.5"
	''')

for i in range(1,ni+1,1):

	velinv = 'model_%d' % i
	vspline = 'vspline_%d' % i
	nipangles = 'nipangles_%d' % i
	ray =  'ray_%d' % i
	nipsources = 'nipsources_%d' % i
	angles = 'angles_%d' % i

	# NIP model setup, ray-tracing from acquisition surface to NIP sources
	Flow([ray,nipangles],[model,'shotsfile','anglefile','t0s'],
		'''
		nipmodsetup shotsfile=${SOURCES[1]} anglefile=${SOURCES[2]} t0s=${SOURCES[3]} nipangles=${TARGETS[1]}
		''')

	# Rotate ray angles in NIP sources positions in 180 degrees
	Flow(angles,nipangles,'math output="input-180" | put n1=%d d1=1 o1=1'%(ns))
	Flow(nipsources,ray,'dd type=float | put n1=2 n2=%d'%(ns))

	# forward modeling
	# do a ray-tracing from NIP sources to acquisition surface and measure traveltime
	Flow([velinv,vspline],
		[model,nipsources,angles,'t0s','m0s','rnips','betas','sz',sv],
		'''
		stereoniptomo shotsfile=${SOURCES[1]} anglefile=${SOURCES[2]} t0s=${SOURCES[3]} m0s=${SOURCES[4]} rnips=${SOURCES[5]} betas=${SOURCES[6]} sz=${SOURCES[7]} sv=${SOURCES[8]} vspline=${TARGETS[1]} v0=1.508 nit=10 c0=0.1 temp0=5
		''')

	model = velinv
	sv = vspline

# NIP model setup after velocity model inversion,
# ray-tracing from acquisition surface to NIP sources
Flow(['ray2','nipangles2'],[velinv,'shotsfile','anglefile','t0s'],
        '''
        nipmodsetup shotsfile=${SOURCES[1]} anglefile=${SOURCES[2]} t0s=${SOURCES[3]} nipangles=${TARGETS[1]}
        ''')

Flow('result','ray2','dd type=float | put n1=2 n2=%d'%(ns))

End()
