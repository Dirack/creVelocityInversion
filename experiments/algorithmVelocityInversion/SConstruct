#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Simulate diffractions in the stacked section and migrate them in
# time using focusing analysis, after that, do velocity inversion 
# using the algorithm from Camerom (2008).
#
# Site: http://www.dirackslounge.online
# 
# Version 1.0
#
# Programer: Rodolfo A. C. Neves (Dirack) 19/08/2020
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

# Madagascar package
from rsf.proj import *

# Personal Madagascar recipes
from diff import diffmig as diff

# Iterative picking - Loop over reflectors
numberOfReflectors = 2
section = '../modelingAndStack/stackedSection.rsf'
velocities=(1.5,1.6)
for i in range(numberOfReflectors):

	reflectorPickedPoints = 'reflectorPickedPoints-%i.txt' % i
	t0sFile = 't0s-%i' % i
	t0sAscii = 't0s-%i.asc' %i
	m0sFile = 'm0s-%i' % i
	m0sAscii = 'm0s-%i.asc' % i
	returnedSection = 'returnedSection-%i' % i
	diffSection = 'diffSection-%i' % i

	# Reflector iterative Picking
	Flow(reflectorPickedPoints,section,
		'''
		ipick
		''')

	# Next step is done with 'ascFormat.sh' Shell Script
	# please check if the script have permissions to execute
	# Build t0 coordinates file (pass 1 to generate t0s file)
	Flow(t0sAscii,reflectorPickedPoints,
		'''
		./ascFormat.sh 1 %s
		''' % (t0sAscii))

	Flow(t0sFile,t0sAscii,'sfdd form=native')

	# Build m0 coordinates file (pass 2 to generate m0s file)
	Flow(m0sAscii,reflectorPickedPoints,
		'''
		./ascFormat.sh 2 %s
		''' % (m0sAscii))

	Flow(m0sFile,m0sAscii,'sfdd form=native')

	# Diffraction simulation in stacked section
	Flow([returnedSection,diffSection],[section,t0sFile,m0sFile],
		'''
		diffsim diff=${TARGETS[1]} aperture=1
		t0=${SOURCES[1]} m0=${SOURCES[2]} v=%g freq=10 verb=y
		''' % (velocities[i]))

	section = returnedSection

Flow('diffAdd',['diffSection-0','diffSection-1'],'sfadd ${SOURCES[1]} scale=1,1')

# Diffraction migration by focusing analysis
diff("diff",
	'diffAdd',
	v0=1.4,
	nv=100,
	dv=0.01,
	nx=201,
	padx=1000,
	nt=1001,
	tmin=0,
	tmax=4,
	rect1=10,
	rect2=10,
	srect1=1,
	srect2=3,
	vslope=None,
	units='Km',
	f1=1,
	j3=1,
	dx=0.025,
	x0=0,
	beg1=0,
	frect1=0,
	frect2=0,
	an=1,
	nout=2048,
	vx0=None)

# Velocity inversion with the Camerom algorithm (2008)
Flow('vdix2 vmig2','diff-pik',
     '''
     dix rect1=20 rect2=20
     vrmsout=${TARGETS[1]}
     niter=40
     ''')

nz=200
dz=0.01
Flow('vxz x0 t0','vdix2',
     '''
     transp |
     cameron2d method=cheb neval=20 nc=1000 nz=%d dz=%g 
     x0=${TARGETS[1]} t0=${TARGETS[2]} |
     put label1=Lateral unit1=km label2=Depth unit2=km
     ''' % (nz,dz),local=1)

End()
